; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)

#define MyVersion GetDateTimeString('yyyymmdd', '', '');

AppId={{BCE3D0D3-EA2C-4C41-893E-63996DC556D3}
AppName=NZ Open Autorouting GPS Project
AppVerName=NZ Open Autorouting GPS Project Version - {#MyVersion}
AppPublisherURL=http://gwprojects.org/gps/
AppSupportURL=http://gwprojects.org/gps/
AppUpdatesURL=http://gwprojects.org/gps/
DefaultDirName={pf}\NZ Open Autorouting GPS Project
DefaultGroupName=NZ Open Autorouting GPS Project
LicenseFile=installer-license.txt
OutputDir={#Sdir}
OutputBaseFilename={#MyVersion}_FREE_OpenGPS_NZ_Maps_Setup
Compression=lzma/max
SolidCompression=true
WizardImageFile={#WImg}
WizardSmallImageFile=compiler:WizModernSmallImage-IS.bmp
WizardImageStretch=false
InfoAfterFile=installer_readme.txt
AppCopyright=Copyright © 2004-2016
UninstallFilesDir={app}
UninstallLogMode=overwrite
InternalCompressLevel=max

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Icons]
Name: {group}\{cm:UninstallProgram,NZ Open GPS Maps}; Filename: {uninstallexe}
Name: {group}\NZ Open GPS Project Website; Filename: http://nzopengps.org/
Name: {group}\NZ Open GPS Project Forum; Filename: http://gwprojects.org/forum/


[Files]
;Check function will create all registry entries
;Parameters are:
;MDXfile: String;
;MDRfile: String;
;LOC: String;
;TDBfile: String;
;BMAPfile: String;
;ProductCode: String

Source: {#Sdir}\64000012.img; DestDir: {app}; Flags: promptifolder; Check: CreateRegistry(ExpandConstant('{app}\OS_type.typ'), ExpandConstant('{app}\Free Open GPS NZ Autorouting.MDX'),ExpandConstant('{app}\FREE OPEN GPS NZ AUTOROUTING_MDR.IMG'), ExpandConstant('{app}'), ExpandConstant('{app}\Free Open GPS NZ Autorouting.TDB'), ExpandConstant('{app}\Free Open GPS NZ Autorouting.img'), '1')
Source: {#Sdir}\64000013.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000014.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000015.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000016.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000017.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000018.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000019.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000020.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\64000021.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\Free Open GPS NZ Autorouting.img; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\Free Open GPS NZ Autorouting.MDX; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\Free Open GPS NZ Autorouting.TDB; DestDir: {app}; Flags: promptifolder
Source: {#Sdir}\FREE OPEN GPS NZ AUTOROUTING_MDR.IMG; DestDir: {app}; Flags: promptifolder
Source: installer_readme.txt; DestDir: {app}; Flags: promptifolder
Source: installer-license.txt; DestDir: {app}; Flags: promptifolder
Source: {#Bdir}/TypeFiles/TYPNUL00.typ; DestDir: "{app}"; Flags: promptifolder; DestName: OS_type.typ; Check: S0
Source: {#Bdir}/TypeFiles/TYPOPT01.typ; DestDir: "{app}"; Flags: promptifolder; DestName: OS_type.typ; Check: S1


[Code]
var
MyProgCheckResult: Boolean;
MapSourceDir: String;
BaseCampDir: String;
MapSourceReg: String;
RegistryCreated: Boolean;
preresult: Boolean;
Page: TInputOptionWizardPage;


// BE SURE to change BELOW FID to be consistent with your FID
const
FID = 963;

//
// CHECKING WHETHER THE STANDARD GAMIN TYPE FILE OR THE NZOPENGPS HAS BEEN USER SELECTED
//

function S0(): Boolean;
begin
preresult := false;
if not Page.Values[0] then
begin
preresult := true;
end;
Result := preresult;
end;

function S1(): Boolean;
begin
preresult := false;
if Page.Values[0] then
begin
preresult := true;
end;
Result := preresult;
end;

function MapsourceCheck(): Boolean;
begin
  MyProgCheckResult := False;
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\Applications\MapSource','InstallDir', MapSourceDir) then
  begin
    MyProgCheckResult := True;
  end;
  
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\Applications\BaseCamp','InstallDir', BaseCampDir) then
  begin
    MyProgCheckResult := True;
  end;

  Result := MyProgCheckResult;
end;

function CreateRegistry(TYPfile: String; MDXfile: String; MDRfile: String; LOCfile: String; TDBfile: String; BMAPfile: String; ProductCode: String): Boolean;
var
TmpFID: String;
TF: Byte;
begin
if not RegistryCreated then
begin
RegistryCreated := True;
TF := FID;
TmpFID := '00';
TmpFID[1] := Chr(TF);
TF := (FID / 256);
TmpFID[2] := Chr(TF);
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' ,'TYP', TYPfile );
RegWriteBinaryValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' ,'ID',TmpFID );
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' ,'IDX', MDXfile);
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' ,'MDR', MDRfile);
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' + '\' + ProductCode ,'LOC', LOCfile);
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' + '\' + ProductCode ,'TDB', TDBfile);
RegWriteStringValue(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting' + '\' + ProductCode ,'BMAP', BMAPfile);
end
Result := True;
end;


// Check if our FID is not already installed in Mapsource
// If REMOVE set to true - remove duplicated entry from registry

function CheckFIDDuplicate(FIDcheck : Integer; Remove: Boolean): Boolean;
var
I : Integer;
FidNames: TArrayOfString;
TmpFID: String;
LocalFID: Integer;

begin
MyProgCheckResult := False;
if RegGetSubkeyNames(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\', FidNames) then
begin
for I := 0 to GetArrayLength(FidNames)-1 do
begin
MapSourceReg := 'Software\Garmin\MapSource\Families\' + FidNames[I];
if RegQueryBinaryValue(HKEY_LOCAL_MACHINE, MapSourceReg, 'ID', TmpFID) then
begin
if Length(TmpFID) = 2 then
LocalFID := Ord(TmpFID[2])* 256 + Ord(TmpFID[1])
else
LocalFID := Ord(TmpFID[1])
if FIDcheck = LocalFID then begin
if Remove then begin
RegDeleteKeyIncludingSubkeys(HKEY_LOCAL_MACHINE, MapSourceReg)
end;
MyProgCheckResult := True;
end;
end;
end;
end;
Result := MyProgCheckResult;
end;

//Be sure to uninstall map entry from registry
function InitializeUninstall(): Boolean;
var
tFID: String;
begin
tFID := IntToStr(FID);

RegDeleteKeyIncludingSubkeys(HKEY_LOCAL_MACHINE, 'Software\Garmin\MapSource\Families\Free Open GPS NZ Autorouting');
Result := True;
end;

function InitializeSetup(): Boolean;
var
nocloseit: Boolean;
begin
nocloseit := True;
RegistryCreated := False;

    // Check if Mapsource is present
    if not MapsourceCheck then
    begin
      if MsgBox('Gamin BaseCamp or MapSource have not been found on this PC' + #13 +
                'This program expects that Garmin MapSource or Basecamp is already installed on your PC, however ' +  #13 +
                'you may use sendmap20 program from http://cgpsmapper.com to upload maps to your GPS device' + #13 +
                ' if you do not have Garmin Mapsource.' + #13 + #13 +
                'Do you want to continue installation?', mbConfirmation, MB_YESNO) = idNo then
        begin
          nocloseit := False;
        end;
    end;

if nocloseit and CheckFIDDuplicate(FID,False) then
begin
if MsgBox('NZ Open GPS Maps are already installed in MapSource (FID: ' + IntToStr(FID) + ')'+ #13 + #13 +
'Do you want to remove existing map and install this version?', mbConfirmation, MB_YESNO) = idYes then
begin
// remove existing map!
CheckFIDDuplicate(FID,True);
end
else
nocloseit := False;
end;
Result := nocloseit;
end;

procedure InitializeWizard();
begin
Page := CreateInputOptionPage(wpWelcome, 'Display options', 'What option would you prefer?', 'Please select your display option, then click Next.', False, False);
Page.Add('Leave this selected if you want the enhanced Open Source Skin applied to the map - uncheck if you would prefer the default garmin skin.');
Page.Values[0] := true;
end;
